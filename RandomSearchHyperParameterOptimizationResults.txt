
Running RandomizedSearchCV for KNN...
Fitting 2 folds for each of 3 candidates, totalling 6 fits
Best params for KNN: {'weights': 'distance', 'p': 1, 'n_neighbors': 5}
Classification report for KNN:
              precision    recall  f1-score   support

           0       0.70      0.79      0.74       994
           1       0.76      0.67      0.71      1000

    accuracy                           0.73      1994
   macro avg       0.73      0.73      0.73      1994
weighted avg       0.73      0.73      0.73      1994


Running RandomizedSearchCV for "SVM": {
        "model": SVC(probability=True),
        "params": {
            "C": [0.1, 1, 10],
            "kernel": ["linear", "rbf"],
            "gamma": ["scale", "auto"]
        }
    },DecisionTree...
Fitting 2 folds for each of 3 candidates, totalling 6 fits
Best params for "SVM": {
        "model": SVC(probability=True),
        "params": {
            "C": [0.1, 1, 10],
            "kernel": ["linear", "rbf"],
            "gamma": ["scale", "auto"]
        }
    },DecisionTree: {'min_samples_split': 2, 'max_depth': 20}
Classification report for "SVM": {
        "model": SVC(probability=True),
        "params": {
            "C": [0.1, 1, 10],
            "kernel": ["linear", "rbf"],
            "gamma": ["scale", "auto"]
        }
    },DecisionTree:
              precision    recall  f1-score   support

           0       0.91      0.91      0.91       994
           1       0.91      0.91      0.91      1000

    accuracy                           0.91      1994
   macro avg       0.91      0.91      0.91      1994
weighted avg       0.91      0.91      0.91      1994


Running RandomizedSearchCV for "RandomForest": {
        "model": RandomForestClassifier(),
        "params": {
            "n_estimators": [50, 100, 200],
            "max_depth": [None, 5, 10],
            "min_samples_split": [2, 5]
        }
    },"XGBoost": {
        "model": XGBClassifier(use_label_encoder=False, eval_metric='logloss'),
        "params": {
            "n_estimators": [50, 100],
            "max_depth": [3, 5, 7],
            "learning_rate": [0.01, 0.1, 0.2]
        }
    },GaussianNB...
Classification report for "RandomForest": {
        "model": RandomForestClassifier(),
        "params": {
            "n_estimators": [50, 100, 200],
            "max_depth": [None, 5, 10],
            "min_samples_split": [2, 5]
        }
    },"XGBoost": {
        "model": XGBClassifier(use_label_encoder=False, eval_metric='logloss'),
        "params": {
            "n_estimators": [50, 100],
            "max_depth": [3, 5, 7],
            "learning_rate": [0.01, 0.1, 0.2]
        }
    },GaussianNB:
              precision    recall  f1-score   support

           0       0.67      1.00      0.80       994
           1       1.00      0.51      0.68      1000

    accuracy                           0.76      1994
   macro avg       0.84      0.76      0.74      1994
weighted avg       0.84      0.76      0.74      1994

